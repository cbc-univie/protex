name: Lint

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup flake8 annotations
      uses: rbialon/flake8-annotations@v1
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --exclude protex/scripts --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
          
#name: lint_python
#on: [pull_request, push, workflow_dispatch]
#jobs:
#  lint_python:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v3
#      - run: pip install bandit black codespell flake8 isort mypy pytest pyupgrade safety
#      - run: bandit --recursive --skip B101 . || true  # B101 is assert statements
#      - run: black --check . || true
#      - run: codespell || true  # --ignore-words-list="" --skip=""
#      - run: flake8 . --exclude protex/scripts --count --select=E9,F63,F7,F82 --show-source --statistics
#      - run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --show-source --statistics
#      - run: isort --check-only --profile black . || true
#      - run: pip install -r requirements.txt || true
#      - run: mypy --install-types --non-interactive . || true
#      - run: pytest . || true
#     - run: pytest --doctest-modules . || true
#     - run: shopt -s globstar && pyupgrade --py36-plus **/*.py || true
#     - run: safety check
